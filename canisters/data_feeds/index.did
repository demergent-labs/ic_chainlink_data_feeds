type State = record {
    "chainlink_contract_addresses": record { "eth_usd": text; "btc_usd": text; "link_usd": text; "aave_usd": text; "bnb_usd": text; "uni_usd": text; };
    "fetching_data_feeds": bool;
    "heartbeat_minutes": nat64;
    "last_heartbeat": nat64;
    "latest_answers": opt LatestAnswers;
};

type LatestAnswer = record {
    "answer": int;
    "time": nat64;
};

type HttpResponse = record {
    "status": nat64;
    "headers": vec HttpHeader;
    "body": blob;
};

type CreateCanisterArgs = record {
    "settings": opt CanisterSettings;
};

type UpdateSettingsArgs = record {
    "canister_id": principal;
    "settings": CanisterSettings;
};

type InstallCodeArgs = record {
    "mode": InstallCodeMode;
    "canister_id": principal;
    "wasm_module": blob;
    "arg": blob;
};

type UninstallCodeArgs = record {
    "canister_id": principal;
};

type StartCanisterArgs = record {
    "canister_id": principal;
};

type StopCanisterArgs = record {
    "canister_id": principal;
};

type CanisterStatusArgs = record {
    "canister_id": principal;
};

type DeleteCanisterArgs = record {
    "canister_id": principal;
};

type DepositCyclesArgs = record {
    "canister_id": principal;
};

type HttpRequestArgs = record {
    "url": text;
    "max_response_bytes": opt nat64;
    "http_method": HttpMethod;
    "headers": vec HttpHeader;
    "body": opt blob;
    "transform_method_name": opt text;
};

type ProvisionalCreateCanisterWithCyclesArgs = record {
    "amount": opt nat;
    "settings": opt CanisterSettings;
};

type ProvisionalTopUpCanisterArgs = record {
    "canister_id": principal;
    "amount": nat;
};

type CreateCanisterResult = record {
    "canister_id": principal;
};

type CanisterStatusResult = record {
    "status": CanisterStatus;
    "settings": DefiniteCanisterSettings;
    "module_hash": opt blob;
    "memory_size": nat;
    "cycles": nat;
};

type ProvisionalCreateCanisterWithCyclesResult = record {
    "canister_id": principal;
};

type LatestAnswers = record {
    "eth_usd": LatestAnswer;
    "btc_usd": LatestAnswer;
    "link_usd": LatestAnswer;
    "aave_usd": LatestAnswer;
    "bnb_usd": LatestAnswer;
    "uni_usd": LatestAnswer;
};

type HttpHeader = record {
    "name": text;
    "value": text;
};

type CanisterSettings = record {
    "controllers": opt vec principal;
    "compute_allocation": opt nat;
    "memory_allocation": opt nat;
    "freezing_threshold": opt nat;
};

type DefiniteCanisterSettings = record {
    "controllers": vec principal;
    "compute_allocation": nat;
    "memory_allocation": nat;
    "freezing_threshold": nat;
};

type InstallCodeMode = variant { "install": null; "reinstall": null; "upgrade": null };

type HttpMethod = variant { "GET": null; "HEAD": null; "POST": null };

type CanisterStatus = variant { "running": null; "stopping": null; "stopped": null };

service: (text) -> {
    "get_state": () -> (State) query;
    "get_latest_answer_eth_usd": () -> (opt LatestAnswer) query;
    "get_latest_answer_btc_usd": () -> (opt LatestAnswer) query;
    "get_latest_answer_link_usd": () -> (opt LatestAnswer) query;
    "get_latest_answer_aave_usd": () -> (opt LatestAnswer) query;
    "get_latest_answer_bnb_usd": () -> (opt LatestAnswer) query;
    "get_latest_answer_uni_usd": () -> (opt LatestAnswer) query;
    "get_data_feed_latest_answer_transform": (HttpResponse) -> (HttpResponse) query;
}
